{"created_at": "2024-01-23 12:21:49.897255", "build": null, "status": "unhealthy", "report": {"datastore_classic": {"desc": "Datastore Classic", "results": {"TestDatastoreClassic.test_healthy": {"desc": "Test API self-reports as healthy", "args": [], "outcome": "failed", "error_msg": "self = <test_datastore_classic.TestDatastoreClassic object at 0x7f6c0c36b350>\n\n    def test_healthy(self):\n        \"\"\"\n        Test API self-reports as healthy\n        \"\"\"\n        url = \"https://datastore.codeforiati.org/api/1/about/\"\n        resp = requests.get(url)\n        assert resp.status_code == 200\n        j = resp.json()\n>       assert j[\"status\"] == 'healthy'\nE       AssertionError: assert 'unhealthy' == 'healthy'\nE         - healthy\nE         + unhealthy\nE         ? ++\n\ntests/test_datastore_classic.py:19: AssertionError"}}, "status": "unhealthy"}, "iati_data_dump": {"desc": "IATI Data Dump", "results": {"TestIATIDataDump.test_metadata": {"desc": "Test metadata was created in the last 24 hours", "args": [], "outcome": "failed", "error_msg": "self = <test_iati_data_dump.TestIATIDataDump object at 0x7f6c0c2f8390>\n\n    def test_metadata(self):\n        \"\"\"\n        Test metadata was created in the last 24 hours\n        \"\"\"\n        url = \"https://gist.githubusercontent.com/\" + \\\n              \"codeforIATIbot/efd190029713c6775c43962444dcb8df/\" + \\\n              \"raw/metadata.json\"\n        resp = requests.get(url)\n        assert resp.status_code == 200\n        j = resp.json()\n        created_at = j[\"created_at\"]\n        delta_since = (datetime.now(pytz.utc) - date_parse(created_at))\n>       assert delta_since.days == 0\nE       assert 2 == 0\nE        +  where 2 = datetime.timedelta(days=2, seconds=21839, microseconds=894081).days\n\ntests/test_iati_data_dump.py:23: AssertionError"}}, "status": "unhealthy"}}}